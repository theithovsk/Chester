/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package locadora;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno
 */
public class DevolverTela extends javax.swing.JFrame {

    private String[] temp;

    /**
     * Creates new form DevolverTela
     */
    public DevolverTela() {
        initComponents();
        lerAlugados();
    }

    public void carregarCliente() {

        DefaultTableModel model = (DefaultTableModel) tabAlugados.getModel();
        model.addRow(temp);

    }

    public void lerAlugados() {
        try {
            InputStream is = new FileInputStream("alugados.txt");
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);

            String b = br.readLine();

            while (b != null) {
                temp = new String[5];
                temp = b.split(";");

                carregarCliente();

                b = br.readLine();
            }
            br.close();
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabAlugados = new javax.swing.JTable();
        btnDevolução = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        numDias = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Devolução de Veículo");

        jDesktopPane1.setBackground(new java.awt.Color(153, 153, 153));

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        tabAlugados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RG do Cliente", "Placa", "Taxa Diária", "Data Alugado", "Horário Alugado", "Marca", "Modelo", "Cor", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabAlugados);

        btnDevolução.setText("Efetuar Devolução");
        btnDevolução.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevoluçãoActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Quantidade de dias:");

        numDias.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jDesktopPane1.setLayer(btnSair, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnDevolução, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(numDias, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(numDias, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addComponent(btnDevolução, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnDevolução)
                    .addComponent(jLabel2)
                    .addComponent(numDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnDevoluçãoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevoluçãoActionPerformed

        int linha = tabAlugados.getSelectedRow();
        String rgClienteAlugado = (tabAlugados.getValueAt(linha, 0)).toString();

        int linha2 = tabAlugados.getSelectedRow();
        String placaCarroAlugado = (tabAlugados.getValueAt(linha, 1)).toString();

        int linha3 = tabAlugados.getSelectedRow();
        String taxaCarroAlugado = (tabAlugados.getValueAt(linha, 2)).toString();

        int linha4 = tabAlugados.getSelectedRow();
        String marcaCarroAlugado = (tabAlugados.getValueAt(linha, 5)).toString();

        int linha5 = tabAlugados.getSelectedRow();
        String modeloCarroAlugado = (tabAlugados.getValueAt(linha, 6)).toString();

        int linha6 = tabAlugados.getSelectedRow();
        String corCarroAlugado = (tabAlugados.getValueAt(linha, 7)).toString();

        int linha7 = tabAlugados.getSelectedRow();
        String categoriaCarroAlugado = (tabAlugados.getValueAt(linha, 8)).toString();

        double taxa = Double.parseDouble(taxaCarroAlugado);
        String numeroDias = numDias.getValue().toString();
        double dias = Double.parseDouble(numeroDias);
        double valor = taxa * dias;

        System.out.println(valor);

        JOptionPane.showMessageDialog(null, "Carro de placa " + placaCarroAlugado + ""
                + " alugado pelo cliente de RG " + rgClienteAlugado
                + " devolvido com sucesso!\nValor a ser cobrado: R$ " + valor);

        ///////////////////////////////////////
        String oldFileName = "carros.txt";
        String tmpFileName = "tmp_carros.txt";

        BufferedReader br = null;
        BufferedWriter bw = null;

        try {
            br = new BufferedReader(new FileReader(oldFileName));
            bw = new BufferedWriter(new FileWriter(tmpFileName));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(placaCarroAlugado)) {
                    bw.write(marcaCarroAlugado + ";" + modeloCarroAlugado + ";"
                            + corCarroAlugado + ";" + categoriaCarroAlugado + ";"
                            + taxaCarroAlugado + ";" + placaCarroAlugado + ";" + "S;");
                }
                bw.write(line + "\n");
            }
        } catch (Exception e) {
            return;
        } finally {
            try {
                if (br != null) {
                    br.close();
                }
            } catch (IOException e) {
                //
            }
            try {
                if (bw != null) {
                    bw.close();
                }
            } catch (IOException e) {
                //
            }
        }
        //deleta o arquivo antigo
        File oldFile = new File(oldFileName);
        oldFile.delete();

        //Renomeia o arquivo temporário
        File newFile = new File(tmpFileName);
        newFile.renameTo(oldFile);
        //////////////////////////////////

        String oldFileName2 = "alugados.txt";
        String tmpFileName2 = "tmp_alugados.txt";

        BufferedReader br2 = null;
        BufferedWriter bw2 = null;

        try {
            br2 = new BufferedReader(new FileReader(oldFileName2));
            bw2 = new BufferedWriter(new FileWriter(tmpFileName2));
            String line2;
            while ((line2 = br2.readLine()) != null) {
                if (line2.contains(placaCarroAlugado)) {

                } else {
                    bw2.write(line2 + "\n");
                }
            }
        } catch (Exception e) {
            return;
        } finally {
            try {
                if (br2 != null) {
                    br2.close();
                }
            } catch (IOException e) {
                //
            }
            try {
                if (bw2 != null) {
                    bw2.close();
                }
            } catch (IOException e) {
                //
            }
        }
        //deleta o arquivo antigo
        File oldFile2 = new File(oldFileName2);
        oldFile2.delete();

        //Renomeia o arquivo temporário
        File newFile2 = new File(tmpFileName2);
        newFile2.renameTo(oldFile2);
        //////////////////////////////////
        this.dispose();

    }//GEN-LAST:event_btnDevoluçãoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DevolverTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DevolverTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DevolverTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DevolverTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DevolverTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDevolução;
    private javax.swing.JButton btnSair;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner numDias;
    private javax.swing.JTable tabAlugados;
    // End of variables declaration//GEN-END:variables
}
